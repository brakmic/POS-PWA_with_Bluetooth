import { OpenAPIV3 } from 'openapi-types';
export declare type RequestBodyDefaults = {
    content?: {
        [media: string]: OpenAPIV3.MediaTypeObject;
    };
    mimeType?: string;
};
export default class RequestBodyBuilder {
    private static _defaults?;
    private _mimeType?;
    private _requestBody?;
    private _description?;
    /**
     * Sets defaults for the request body object when using the build interface
     *
     * @param defaults The defaults to set - these are global to the RequestBodyBuilder class
     */
    static defaults(defaults: RequestBodyDefaults): void;
    /**
     * Start building a new request body object
     *
     * @param description The optional description of the request body object - only OpenApiv3 required field
     * @returns RequestBodyBuilder instances for method chaining
     */
    static new(description?: string): RequestBodyBuilder;
    private constructor();
    /**
     * Creates a deep copy of the current state of the request body and returns it.
     *
     * @returns A deep copy of the built request body object
     */
    build(): OpenAPIV3.RequestBodyObject;
    /**
     * Short hand for build()
     *
     * @returns A deep copy of the built request body object
     */
    b(): OpenAPIV3.RequestBodyObject;
    /**
     * Add a content field to the request body object
     *
     * @param content The content object per OpenApiv3 spec
     * @returns RequestBodyBuilder instances for method chaining
     */
    content: (content: {
        [media: string]: OpenAPIV3.MediaTypeObject;
    }) => RequestBodyBuilder;
    /**
     * Add the schema object to the request body object.
     * Allows for defining the type of media in place, or inheriting a global default.
     *
     * @param schema The MediaType object per OpenApiv3 spec
     * @param mimeType The string of a valid MIME type
     * @returns RequestBodyBuilder instances for method chaining
     * @throws A error if there is no default MIME and a mimeType wasn't included locally
     */
    schema: (schema: OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject, mimeType?: string) => RequestBodyBuilder;
    /**
     * Add the schema object to the request body object as an array.
     * Allows for defining the type of media in place, or inheriting a global default.
     *
     * @param schema The MediaType object per OpenApiv3 spec
     * @param mimeType The string of a valid MIME type
     * @returns RequestBodyBuilder instances for method chaining
     * @throws A error if there is no default MIME and a mimeType wasn't included locally
     */
    schemaArray: (schema: OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject, mimeType?: string) => RequestBodyBuilder;
}
