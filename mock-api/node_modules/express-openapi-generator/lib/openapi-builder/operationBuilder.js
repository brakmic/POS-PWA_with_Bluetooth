"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const utl_1 = __importDefault(require("../utl"));
class OperationBuilder {
    constructor(responses) {
        /**
         * Add a tags field to the Operation object
         *
         * @param tags The tags object per OpenApiv3 spec
         * @returns OperationBuilder instances for method chaining
         */
        this.tags = (tags) => {
            this._operation.tags = (0, utl_1.default)(tags);
            return this;
        };
        /**
         * Add a summary field to the Operation object
         *
         * @param summary The summary string per OpenApiv3 spec
         * @returns OperationBuilder instances for method chaining
         */
        this.summary = (summary) => {
            this._operation.summary = summary;
            return this;
        };
        /**
         * Add a description field to the Operation object
         *
         * @param description The description string per OpenApiv3 spec
         * @returns OperationBuilder instances for method chaining
         */
        this.description = (description) => {
            this._operation.description = description;
            return this;
        };
        /**
         * Add a externalDocObject field to the Operation object
         *
         * @param externalDocObject The externalDocObject object per OpenApiv3 spec
         * @returns OperationBuilder instances for method chaining
         */
        this.externalDocs = (externalDocObject) => {
            this._operation.externalDocs = (0, utl_1.default)(externalDocObject);
            return this;
        };
        /**
         * Add a operationId field to the Operation object.
         *
         * **Must be unique per document**
         *
         * @param operationId The operationId string per OpenApiv3 spec
         * @returns OperationBuilder instances for method chaining
         */
        this.operationId = (operationId) => {
            this._operation.operationId = operationId;
            return this;
        };
        /**
         * Add a parameters field to the Operation object, will include defaults.
         *
         * @param parameters The parameters object per OpenApiv3 spec
         * @returns OperationBuilder instances for method chaining
         */
        this.parameters = (parameters, excludeDefault = false) => {
            let p = (0, utl_1.default)(parameters);
            if (this._operation.parameters && !excludeDefault) {
                p = [...this._operation.parameters, ...p];
            }
            this._operation.parameters = p;
            return this;
        };
        /**
         * Add a requestBody field to the Operation object.
         *
         * @param requestBody The requestBody object per OpenApiv3 spec
         * @returns OperationBuilder instances for method chaining
         */
        this.requestBody = (requestBody) => {
            this._operation.requestBody = (0, utl_1.default)(requestBody);
            return this;
        };
        /**
         * Add a callbacks field to the Operation object.
         *
         * @param callbacks The callbacks object per OpenApiv3 spec
         * @returns OperationBuilder instances for method chaining
         */
        this.callbacks = (callbacks) => {
            this._operation.callbacks = (0, utl_1.default)(callbacks);
            return this;
        };
        /**
         * Add a deprecated field to the Operation object.
         *
         * @param deprecated The deprecated boolean per OpenApiv3 spec
         * @returns OperationBuilder instances for method chaining
         */
        this.deprecated = (deprecated) => {
            this._operation.deprecated = deprecated;
            return this;
        };
        /**
         * Add a security field to the Operation object.
         *
         * @param security The security object per OpenApiv3 spec
         * @returns OperationBuilder instances for method chaining
         */
        this.security = (security) => {
            this._operation.security = (0, utl_1.default)(security);
            return this;
        };
        /**
         * Add a servers field to the Operation object.
         *
         * @param servers The servers object per OpenApiv3 spec
         * @returns OperationBuilder instances for method chaining
         */
        this.servers = (servers) => {
            this._operation.servers = (0, utl_1.default)(servers);
            return this;
        };
        this._operation = Object.assign({ responses: (0, utl_1.default)(responses) }, (0, utl_1.default)(OperationBuilder._defaults));
    }
    /**
     * Sets defaults for the operation object when using the build interface
     *
     * @param defaults The defaults to set - these are global to the OperationBuilder class
     */
    static defaults(defaults) {
        OperationBuilder._defaults = (0, utl_1.default)(defaults);
    }
    /**
     * Start building a new Operation object
     *
     * @param responses The responses object - required by OpenApiv3
     * @returns OperationBuilder instances for method chaining
     */
    static new(responses) {
        return new OperationBuilder(responses);
    }
    /**
     * Creates a deep copy of the current state of the operation and returns it.
     *
     * @returns A deep copy of the built operation object
     */
    build() {
        return (0, utl_1.default)(this._operation);
    }
    /**
     * Shorthand for build() method
     *
     * @returns A deep copy of the built operation object
     */
    b() {
        return this.build();
    }
}
exports.default = OperationBuilder;
